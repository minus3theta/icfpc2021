/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/config.ts":
/*!***********************!*\
  !*** ./src/config.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "convertCoord": () => (/* binding */ convertCoord),
/* harmony export */   "width": () => (/* binding */ width),
/* harmony export */   "height": () => (/* binding */ height),
/* harmony export */   "grid_color": () => (/* binding */ grid_color),
/* harmony export */   "figure_color": () => (/* binding */ figure_color),
/* harmony export */   "hole_color": () => (/* binding */ hole_color)
/* harmony export */ });
const rate = 10;
const pad = 100;
function convertCoord(x, y) {
    return [x * rate + pad, y * rate + pad];
}
const width = 100 * rate + pad;
const height = 100 * rate + pad;
const grid_color = 'rgb(1,1,1,0.3)';
const figure_color = 'rgb(00,00,255)';
const hole_color = 'rgb(255,00,00)';


/***/ }),

/***/ "./src/drawState.ts":
/*!**************************!*\
  !*** ./src/drawState.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "drawGrid": () => (/* binding */ drawGrid),
/* harmony export */   "drawFigure": () => (/* binding */ drawFigure),
/* harmony export */   "drawHole": () => (/* binding */ drawHole),
/* harmony export */   "updateState": () => (/* binding */ updateState)
/* harmony export */ });
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./src/config.ts");

function drawGrid(ctx) {
    ctx.strokeStyle = _config__WEBPACK_IMPORTED_MODULE_0__.grid_color;
    for (let i = 0; i <= 100; i++) {
        ctx.beginPath();
        let [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(0, i);
        ctx.moveTo(x, y);
        [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(100, i);
        ctx.lineTo(x, y);
        ctx.stroke();
        ctx.beginPath();
        [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(i, 0);
        ctx.moveTo(x, y);
        [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(i, 100);
        ctx.lineTo(x, y);
        ctx.stroke();
    }
}
function drawFigure(figure, ctx) {
    ctx.strokeStyle = _config__WEBPACK_IMPORTED_MODULE_0__.figure_color;
    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.figure_color;
    figure["vertices"].forEach(co => {
        ctx.beginPath();
        const [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(co[0], co[1]);
        ctx.arc(x, y, 3, 0, Math.PI * 2, false);
        ctx.fill();
    });
    figure["edges"].forEach(e => {
        const from = figure["vertices"][e[0]];
        const to = figure["vertices"][e[1]];
        ctx.beginPath();
        let [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(from[0], from[1]);
        ctx.moveTo(x, y);
        [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(to[0], to[1]);
        ctx.lineTo(x, y);
        ctx.stroke();
    });
}
function drawHole(hole, ctx) {
    ctx.strokeStyle = _config__WEBPACK_IMPORTED_MODULE_0__.hole_color;
    ctx.fillStyle = _config__WEBPACK_IMPORTED_MODULE_0__.hole_color;
    hole.forEach(co => {
        ctx.beginPath();
        const [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(co[0], co[1]);
        ctx.arc(x, y, 3, 0, Math.PI * 2, false);
        ctx.fill();
    });
    for (let i = 0; i < hole.length; i++) {
        const from = hole[i];
        const to = hole[(i + 1) % hole.length];
        ctx.beginPath();
        let [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(from[0], from[1]);
        ctx.moveTo(x, y);
        [x, y] = (0,_config__WEBPACK_IMPORTED_MODULE_0__.convertCoord)(to[0], to[1]);
        ctx.lineTo(x, y);
        ctx.stroke();
    }
}
function updateState(state, ctx) {
    ctx.clearRect(0, 0, _config__WEBPACK_IMPORTED_MODULE_0__.width, _config__WEBPACK_IMPORTED_MODULE_0__.height);
    drawGrid(ctx);
    drawHole(state["hole"], ctx);
    drawFigure(state["figure"], ctx);
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ "./src/config.ts");
/* harmony import */ var _drawState__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./drawState */ "./src/drawState.ts");


const canvas = document.getElementById('canvas');
canvas.width = _config__WEBPACK_IMPORTED_MODULE_0__.width;
canvas.height = _config__WEBPACK_IMPORTED_MODULE_0__.height;
const ctx = canvas.getContext('2d');
let state = {
    "hole": [
        [45, 80], [35, 95], [5, 95], [35, 50], [5, 5], [35, 5], [95, 95], [65, 95], [55, 80]
    ],
    "epsilon": 150000,
    "figure": {
        "edges": [
            [2, 5], [5, 4], [4, 1], [1, 0], [0, 8], [8, 3], [3, 7], [7, 11], [11, 13],
            [13, 12], [12, 18], [18, 19], [19, 14], [14, 15], [15, 17], [17, 16],
            [16, 10], [10, 6], [6, 2], [8, 12], [7, 9], [9, 3], [8, 9], [9, 12], [13, 9],
            [9, 11], [4, 8], [12, 14], [5, 10], [10, 15]
        ],
        "vertices": [
            [20, 30], [20, 40], [30, 95], [40, 15], [40, 35], [40, 65], [40, 95],
            [45, 5], [45, 25], [50, 15], [50, 70], [55, 5], [55, 25], [60, 15],
            [60, 35], [60, 65], [60, 95], [70, 95], [80, 30], [80, 40]
        ]
    }
};
(0,_drawState__WEBPACK_IMPORTED_MODULE_1__.updateState)(state, ctx);
const state_text_area = document.getElementById("state");
const update_button = document.getElementById("update");
state_text_area.value = JSON.stringify(state, null, 4);
update_button.addEventListener('click', (_ev) => {
    state = JSON.parse(state_text_area.value);
    (0,_drawState__WEBPACK_IMPORTED_MODULE_1__.updateState)(state, ctx);
});

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,